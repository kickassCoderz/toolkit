/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ShowcaseIndexImport } from './routes/showcase/index'
import { Route as PackagesIndexImport } from './routes/packages/index'
import { Route as BlogIndexImport } from './routes/blog/index'
import { Route as PackagesKickassUiIndexImport } from './routes/packages/kickass-ui/index'
import { Route as PackagesKickassUiDocumentationRouteImport } from './routes/packages/kickass-ui/documentation/route'
import { Route as PackagesKickassUiPlaygroundIndexImport } from './routes/packages/kickass-ui/playground/index'
import { Route as PackagesKickassUiDocumentationIndexImport } from './routes/packages/kickass-ui/documentation/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ShowcaseIndexRoute = ShowcaseIndexImport.update({
  id: '/showcase/',
  path: '/showcase/',
  getParentRoute: () => rootRoute,
} as any)

const PackagesIndexRoute = PackagesIndexImport.update({
  id: '/packages/',
  path: '/packages/',
  getParentRoute: () => rootRoute,
} as any)

const BlogIndexRoute = BlogIndexImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRoute,
} as any)

const PackagesKickassUiIndexRoute = PackagesKickassUiIndexImport.update({
  id: '/packages/kickass-ui/',
  path: '/packages/kickass-ui/',
  getParentRoute: () => rootRoute,
} as any)

const PackagesKickassUiDocumentationRouteRoute =
  PackagesKickassUiDocumentationRouteImport.update({
    id: '/packages/kickass-ui/documentation',
    path: '/packages/kickass-ui/documentation',
    getParentRoute: () => rootRoute,
  } as any)

const PackagesKickassUiPlaygroundIndexRoute =
  PackagesKickassUiPlaygroundIndexImport.update({
    id: '/packages/kickass-ui/playground/',
    path: '/packages/kickass-ui/playground/',
    getParentRoute: () => rootRoute,
  } as any)

const PackagesKickassUiDocumentationIndexRoute =
  PackagesKickassUiDocumentationIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PackagesKickassUiDocumentationRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexImport
      parentRoute: typeof rootRoute
    }
    '/packages/': {
      id: '/packages/'
      path: '/packages'
      fullPath: '/packages'
      preLoaderRoute: typeof PackagesIndexImport
      parentRoute: typeof rootRoute
    }
    '/showcase/': {
      id: '/showcase/'
      path: '/showcase'
      fullPath: '/showcase'
      preLoaderRoute: typeof ShowcaseIndexImport
      parentRoute: typeof rootRoute
    }
    '/packages/kickass-ui/documentation': {
      id: '/packages/kickass-ui/documentation'
      path: '/packages/kickass-ui/documentation'
      fullPath: '/packages/kickass-ui/documentation'
      preLoaderRoute: typeof PackagesKickassUiDocumentationRouteImport
      parentRoute: typeof rootRoute
    }
    '/packages/kickass-ui/': {
      id: '/packages/kickass-ui/'
      path: '/packages/kickass-ui'
      fullPath: '/packages/kickass-ui'
      preLoaderRoute: typeof PackagesKickassUiIndexImport
      parentRoute: typeof rootRoute
    }
    '/packages/kickass-ui/documentation/': {
      id: '/packages/kickass-ui/documentation/'
      path: '/'
      fullPath: '/packages/kickass-ui/documentation/'
      preLoaderRoute: typeof PackagesKickassUiDocumentationIndexImport
      parentRoute: typeof PackagesKickassUiDocumentationRouteImport
    }
    '/packages/kickass-ui/playground/': {
      id: '/packages/kickass-ui/playground/'
      path: '/packages/kickass-ui/playground'
      fullPath: '/packages/kickass-ui/playground'
      preLoaderRoute: typeof PackagesKickassUiPlaygroundIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface PackagesKickassUiDocumentationRouteRouteChildren {
  PackagesKickassUiDocumentationIndexRoute: typeof PackagesKickassUiDocumentationIndexRoute
}

const PackagesKickassUiDocumentationRouteRouteChildren: PackagesKickassUiDocumentationRouteRouteChildren =
  {
    PackagesKickassUiDocumentationIndexRoute:
      PackagesKickassUiDocumentationIndexRoute,
  }

const PackagesKickassUiDocumentationRouteRouteWithChildren =
  PackagesKickassUiDocumentationRouteRoute._addFileChildren(
    PackagesKickassUiDocumentationRouteRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/blog': typeof BlogIndexRoute
  '/packages': typeof PackagesIndexRoute
  '/showcase': typeof ShowcaseIndexRoute
  '/packages/kickass-ui/documentation': typeof PackagesKickassUiDocumentationRouteRouteWithChildren
  '/packages/kickass-ui': typeof PackagesKickassUiIndexRoute
  '/packages/kickass-ui/documentation/': typeof PackagesKickassUiDocumentationIndexRoute
  '/packages/kickass-ui/playground': typeof PackagesKickassUiPlaygroundIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/blog': typeof BlogIndexRoute
  '/packages': typeof PackagesIndexRoute
  '/showcase': typeof ShowcaseIndexRoute
  '/packages/kickass-ui': typeof PackagesKickassUiIndexRoute
  '/packages/kickass-ui/documentation': typeof PackagesKickassUiDocumentationIndexRoute
  '/packages/kickass-ui/playground': typeof PackagesKickassUiPlaygroundIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/blog/': typeof BlogIndexRoute
  '/packages/': typeof PackagesIndexRoute
  '/showcase/': typeof ShowcaseIndexRoute
  '/packages/kickass-ui/documentation': typeof PackagesKickassUiDocumentationRouteRouteWithChildren
  '/packages/kickass-ui/': typeof PackagesKickassUiIndexRoute
  '/packages/kickass-ui/documentation/': typeof PackagesKickassUiDocumentationIndexRoute
  '/packages/kickass-ui/playground/': typeof PackagesKickassUiPlaygroundIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/blog'
    | '/packages'
    | '/showcase'
    | '/packages/kickass-ui/documentation'
    | '/packages/kickass-ui'
    | '/packages/kickass-ui/documentation/'
    | '/packages/kickass-ui/playground'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/blog'
    | '/packages'
    | '/showcase'
    | '/packages/kickass-ui'
    | '/packages/kickass-ui/documentation'
    | '/packages/kickass-ui/playground'
  id:
    | '__root__'
    | '/'
    | '/blog/'
    | '/packages/'
    | '/showcase/'
    | '/packages/kickass-ui/documentation'
    | '/packages/kickass-ui/'
    | '/packages/kickass-ui/documentation/'
    | '/packages/kickass-ui/playground/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BlogIndexRoute: typeof BlogIndexRoute
  PackagesIndexRoute: typeof PackagesIndexRoute
  ShowcaseIndexRoute: typeof ShowcaseIndexRoute
  PackagesKickassUiDocumentationRouteRoute: typeof PackagesKickassUiDocumentationRouteRouteWithChildren
  PackagesKickassUiIndexRoute: typeof PackagesKickassUiIndexRoute
  PackagesKickassUiPlaygroundIndexRoute: typeof PackagesKickassUiPlaygroundIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BlogIndexRoute: BlogIndexRoute,
  PackagesIndexRoute: PackagesIndexRoute,
  ShowcaseIndexRoute: ShowcaseIndexRoute,
  PackagesKickassUiDocumentationRouteRoute:
    PackagesKickassUiDocumentationRouteRouteWithChildren,
  PackagesKickassUiIndexRoute: PackagesKickassUiIndexRoute,
  PackagesKickassUiPlaygroundIndexRoute: PackagesKickassUiPlaygroundIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/blog/",
        "/packages/",
        "/showcase/",
        "/packages/kickass-ui/documentation",
        "/packages/kickass-ui/",
        "/packages/kickass-ui/playground/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/blog/": {
      "filePath": "blog/index.tsx"
    },
    "/packages/": {
      "filePath": "packages/index.tsx"
    },
    "/showcase/": {
      "filePath": "showcase/index.tsx"
    },
    "/packages/kickass-ui/documentation": {
      "filePath": "packages/kickass-ui/documentation/route.tsx",
      "children": [
        "/packages/kickass-ui/documentation/"
      ]
    },
    "/packages/kickass-ui/": {
      "filePath": "packages/kickass-ui/index.tsx"
    },
    "/packages/kickass-ui/documentation/": {
      "filePath": "packages/kickass-ui/documentation/index.tsx",
      "parent": "/packages/kickass-ui/documentation"
    },
    "/packages/kickass-ui/playground/": {
      "filePath": "packages/kickass-ui/playground/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
