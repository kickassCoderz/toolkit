/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DocumentationRouteImport } from './routes/documentation/route'
import { Route as MarketingRouteImport } from './routes/_marketing/route'
import { Route as DocumentationIndexImport } from './routes/documentation/index'
import { Route as MarketingIndexImport } from './routes/_marketing/index'
import { Route as MarketingShowcaseIndexImport } from './routes/_marketing/showcase/index'
import { Route as MarketingPlaygroundIndexImport } from './routes/_marketing/playground/index'

// Create/Update Routes

const DocumentationRouteRoute = DocumentationRouteImport.update({
  id: '/documentation',
  path: '/documentation',
  getParentRoute: () => rootRoute,
} as any)

const MarketingRouteRoute = MarketingRouteImport.update({
  id: '/_marketing',
  getParentRoute: () => rootRoute,
} as any)

const DocumentationIndexRoute = DocumentationIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DocumentationRouteRoute,
} as any)

const MarketingIndexRoute = MarketingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MarketingRouteRoute,
} as any)

const MarketingShowcaseIndexRoute = MarketingShowcaseIndexImport.update({
  id: '/showcase/',
  path: '/showcase/',
  getParentRoute: () => MarketingRouteRoute,
} as any)

const MarketingPlaygroundIndexRoute = MarketingPlaygroundIndexImport.update({
  id: '/playground/',
  path: '/playground/',
  getParentRoute: () => MarketingRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_marketing': {
      id: '/_marketing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MarketingRouteImport
      parentRoute: typeof rootRoute
    }
    '/documentation': {
      id: '/documentation'
      path: '/documentation'
      fullPath: '/documentation'
      preLoaderRoute: typeof DocumentationRouteImport
      parentRoute: typeof rootRoute
    }
    '/_marketing/': {
      id: '/_marketing/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MarketingIndexImport
      parentRoute: typeof MarketingRouteImport
    }
    '/documentation/': {
      id: '/documentation/'
      path: '/'
      fullPath: '/documentation/'
      preLoaderRoute: typeof DocumentationIndexImport
      parentRoute: typeof DocumentationRouteImport
    }
    '/_marketing/playground/': {
      id: '/_marketing/playground/'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof MarketingPlaygroundIndexImport
      parentRoute: typeof MarketingRouteImport
    }
    '/_marketing/showcase/': {
      id: '/_marketing/showcase/'
      path: '/showcase'
      fullPath: '/showcase'
      preLoaderRoute: typeof MarketingShowcaseIndexImport
      parentRoute: typeof MarketingRouteImport
    }
  }
}

// Create and export the route tree

interface MarketingRouteRouteChildren {
  MarketingIndexRoute: typeof MarketingIndexRoute
  MarketingPlaygroundIndexRoute: typeof MarketingPlaygroundIndexRoute
  MarketingShowcaseIndexRoute: typeof MarketingShowcaseIndexRoute
}

const MarketingRouteRouteChildren: MarketingRouteRouteChildren = {
  MarketingIndexRoute: MarketingIndexRoute,
  MarketingPlaygroundIndexRoute: MarketingPlaygroundIndexRoute,
  MarketingShowcaseIndexRoute: MarketingShowcaseIndexRoute,
}

const MarketingRouteRouteWithChildren = MarketingRouteRoute._addFileChildren(
  MarketingRouteRouteChildren,
)

interface DocumentationRouteRouteChildren {
  DocumentationIndexRoute: typeof DocumentationIndexRoute
}

const DocumentationRouteRouteChildren: DocumentationRouteRouteChildren = {
  DocumentationIndexRoute: DocumentationIndexRoute,
}

const DocumentationRouteRouteWithChildren =
  DocumentationRouteRoute._addFileChildren(DocumentationRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof MarketingRouteRouteWithChildren
  '/documentation': typeof DocumentationRouteRouteWithChildren
  '/': typeof MarketingIndexRoute
  '/documentation/': typeof DocumentationIndexRoute
  '/playground': typeof MarketingPlaygroundIndexRoute
  '/showcase': typeof MarketingShowcaseIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof MarketingIndexRoute
  '/documentation': typeof DocumentationIndexRoute
  '/playground': typeof MarketingPlaygroundIndexRoute
  '/showcase': typeof MarketingShowcaseIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_marketing': typeof MarketingRouteRouteWithChildren
  '/documentation': typeof DocumentationRouteRouteWithChildren
  '/_marketing/': typeof MarketingIndexRoute
  '/documentation/': typeof DocumentationIndexRoute
  '/_marketing/playground/': typeof MarketingPlaygroundIndexRoute
  '/_marketing/showcase/': typeof MarketingShowcaseIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/documentation'
    | '/'
    | '/documentation/'
    | '/playground'
    | '/showcase'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/documentation' | '/playground' | '/showcase'
  id:
    | '__root__'
    | '/_marketing'
    | '/documentation'
    | '/_marketing/'
    | '/documentation/'
    | '/_marketing/playground/'
    | '/_marketing/showcase/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  MarketingRouteRoute: typeof MarketingRouteRouteWithChildren
  DocumentationRouteRoute: typeof DocumentationRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  MarketingRouteRoute: MarketingRouteRouteWithChildren,
  DocumentationRouteRoute: DocumentationRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_marketing",
        "/documentation"
      ]
    },
    "/_marketing": {
      "filePath": "_marketing/route.tsx",
      "children": [
        "/_marketing/",
        "/_marketing/playground/",
        "/_marketing/showcase/"
      ]
    },
    "/documentation": {
      "filePath": "documentation/route.tsx",
      "children": [
        "/documentation/"
      ]
    },
    "/_marketing/": {
      "filePath": "_marketing/index.tsx",
      "parent": "/_marketing"
    },
    "/documentation/": {
      "filePath": "documentation/index.tsx",
      "parent": "/documentation"
    },
    "/_marketing/playground/": {
      "filePath": "_marketing/playground/index.tsx",
      "parent": "/_marketing"
    },
    "/_marketing/showcase/": {
      "filePath": "_marketing/showcase/index.tsx",
      "parent": "/_marketing"
    }
  }
}
ROUTE_MANIFEST_END */
